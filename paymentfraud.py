{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "da3b20d5-ac88-4055-a029-a097b5d577eb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: seaborn in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (0.13.2)\n",
      "Requirement already satisfied: numpy!=1.24.0,>=1.20 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from seaborn) (1.26.4)\n",
      "Requirement already satisfied: pandas>=1.2 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from seaborn) (2.2.1)\n",
      "Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from seaborn) (3.8.3)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.2.0)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (0.12.1)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (4.50.0)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.4.5)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (24.0)\n",
      "Requirement already satisfied: pillow>=8 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (10.2.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (3.1.2)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pandas>=1.2->seaborn) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from pandas>=1.2->seaborn) (2024.1)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 24.0 -> 24.1.2\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "pip install seaborn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7e708fc0-7de3-441e-9139-1e4dfcc3be7c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting scikit-learn\n",
      "  Downloading scikit_learn-1.5.1-cp312-cp312-win_amd64.whl.metadata (12 kB)\n",
      "Requirement already satisfied: numpy>=1.19.5 in c:\\users\\aparu\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from scikit-learn) (1.26.4)\n",
      "Collecting scipy>=1.6.0 (from scikit-learn)\n",
      "  Downloading scipy-1.14.0-cp312-cp312-win_amd64.whl.metadata (60 kB)\n",
      "     ---------------------------------------- 0.0/60.8 kB ? eta -:--:--\n",
      "     ------------------------- ------------ 41.0/60.8 kB 991.0 kB/s eta 0:00:01\n",
      "     ---------------------------------------- 60.8/60.8 kB 1.6 MB/s eta 0:00:00\n",
      "Collecting joblib>=1.2.0 (from scikit-learn)\n",
      "  Downloading joblib-1.4.2-py3-none-any.whl.metadata (5.4 kB)\n",
      "Collecting threadpoolctl>=3.1.0 (from scikit-learn)\n",
      "  Downloading threadpoolctl-3.5.0-py3-none-any.whl.metadata (13 kB)\n",
      "Downloading scikit_learn-1.5.1-cp312-cp312-win_amd64.whl (10.9 MB)\n",
      "   ---------------------------------------- 0.0/10.9 MB ? eta -:--:--\n",
      "   -- ------------------------------------- 0.6/10.9 MB 12.9 MB/s eta 0:00:01\n",
      "   -- ------------------------------------- 0.8/10.9 MB 8.2 MB/s eta 0:00:02\n",
      "   --- ------------------------------------ 1.0/10.9 MB 6.8 MB/s eta 0:00:02\n",
      "   ---- ----------------------------------- 1.2/10.9 MB 6.1 MB/s eta 0:00:02\n",
      "   ---- ----------------------------------- 1.3/10.9 MB 5.7 MB/s eta 0:00:02\n",
      "   ----- ---------------------------------- 1.5/10.9 MB 5.4 MB/s eta 0:00:02\n",
      "   ------ --------------------------------- 1.7/10.9 MB 5.1 MB/s eta 0:00:02\n",
      "   ------ --------------------------------- 1.9/10.9 MB 4.9 MB/s eta 0:00:02\n",
      "   ------- -------------------------------- 2.0/10.9 MB 4.8 MB/s eta 0:00:02\n",
      "   -------- ------------------------------- 2.2/10.9 MB 4.8 MB/s eta 0:00:02\n",
      "   -------- ------------------------------- 2.4/10.9 MB 4.6 MB/s eta 0:00:02\n",
      "   --------- ------------------------------ 2.6/10.9 MB 4.6 MB/s eta 0:00:02\n",
      "   ---------- ----------------------------- 2.7/10.9 MB 4.5 MB/s eta 0:00:02\n",
      "   ---------- ----------------------------- 2.9/10.9 MB 4.4 MB/s eta 0:00:02\n",
      "   ----------- ---------------------------- 3.1/10.9 MB 4.3 MB/s eta 0:00:02\n",
      "   ----------- ---------------------------- 3.2/10.9 MB 4.3 MB/s eta 0:00:02\n",
      "   ------------ --------------------------- 3.4/10.9 MB 4.2 MB/s eta 0:00:02\n",
      "   ------------ --------------------------- 3.5/10.9 MB 4.2 MB/s eta 0:00:02\n",
      "   ------------- -------------------------- 3.7/10.9 MB 4.1 MB/s eta 0:00:02\n",
      "   -------------- ------------------------- 3.9/10.9 MB 4.1 MB/s eta 0:00:02\n",
      "   -------------- ------------------------- 4.0/10.9 MB 4.1 MB/s eta 0:00:02\n",
      "   --------------- ------------------------ 4.2/10.9 MB 4.1 MB/s eta 0:00:02\n",
      "   --------------- ------------------------ 4.4/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ---------------- ----------------------- 4.6/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ----------------- ---------------------- 4.8/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ----------------- ---------------------- 4.9/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ------------------ --------------------- 5.0/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ------------------- -------------------- 5.2/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ------------------- -------------------- 5.4/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   -------------------- ------------------- 5.5/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   -------------------- ------------------- 5.5/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   -------------------- ------------------- 5.6/10.9 MB 3.7 MB/s eta 0:00:02\n",
      "   ---------------------- ----------------- 6.2/10.9 MB 3.9 MB/s eta 0:00:02\n",
      "   ----------------------- ---------------- 6.3/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ----------------------- ---------------- 6.5/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ------------------------ --------------- 6.7/10.9 MB 3.9 MB/s eta 0:00:02\n",
      "   ------------------------- -------------- 6.9/10.9 MB 4.0 MB/s eta 0:00:02\n",
      "   ------------------------- -------------- 7.0/10.9 MB 3.9 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 7.2/10.9 MB 3.9 MB/s eta 0:00:01\n",
      "   -------------------------- ------------- 7.3/10.9 MB 3.9 MB/s eta 0:00:01\n",
      "   --------------------------- ------------ 7.5/10.9 MB 3.9 MB/s eta 0:00:01\n",
      "   ---------------------------- ----------- 7.7/10.9 MB 3.9 MB/s eta 0:00:01\n",
      "   ---------------------------- ----------- 7.8/10.9 MB 3.9 MB/s eta 0:00:01\n",
      "   ----------------------------- ---------- 8.0/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ----------------------------- ---------- 8.2/10.9 MB 3.9 MB/s eta 0:00:01\n",
      "   ------------------------------ --------- 8.3/10.9 MB 3.9 MB/s eta 0:00:01\n",
      "   ------------------------------- -------- 8.5/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ------------------------------- -------- 8.7/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   -------------------------------- ------- 8.9/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   -------------------------------- ------- 9.0/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 9.2/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 9.4/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 9.5/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 9.7/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 9.9/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 10.1/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 10.2/10.9 MB 3.8 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 10.4/10.9 MB 3.7 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 10.6/10.9 MB 3.7 MB/s eta 0:00:01\n",
      "   ---------------------------------------  10.8/10.9 MB 3.6 MB/s eta 0:00:01\n",
      "   ---------------------------------------  10.9/10.9 MB 3.6 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 10.9/10.9 MB 3.6 MB/s eta 0:00:00\n",
      "Downloading joblib-1.4.2-py3-none-any.whl (301 kB)\n",
      "   ---------------------------------------- 0.0/301.8 kB ? eta -:--:--\n",
      "   --------------------------------------- 301.8/301.8 kB 19.4 MB/s eta 0:00:00\n",
      "Downloading scipy-1.14.0-cp312-cp312-win_amd64.whl (44.5 MB)\n",
      "   ---------------------------------------- 0.0/44.5 MB ? eta -:--:--\n",
      "   ---------------------------------------- 0.2/44.5 MB 13.4 MB/s eta 0:00:04\n",
      "   ---------------------------------------- 0.4/44.5 MB 5.1 MB/s eta 0:00:09\n",
      "    --------------------------------------- 0.6/44.5 MB 4.6 MB/s eta 0:00:10\n",
      "    --------------------------------------- 0.8/44.5 MB 4.5 MB/s eta 0:00:10\n",
      "    --------------------------------------- 0.9/44.5 MB 4.2 MB/s eta 0:00:11\n",
      "    --------------------------------------- 1.1/44.5 MB 4.2 MB/s eta 0:00:11\n",
      "   - -------------------------------------- 1.2/44.5 MB 4.1 MB/s eta 0:00:11\n",
      "   - -------------------------------------- 1.4/44.5 MB 3.9 MB/s eta 0:00:12\n",
      "   - -------------------------------------- 1.6/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   - -------------------------------------- 1.8/44.5 MB 4.0 MB/s eta 0:00:11\n",
      "   - -------------------------------------- 2.0/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   - -------------------------------------- 2.2/44.5 MB 4.0 MB/s eta 0:00:11\n",
      "   -- ------------------------------------- 2.4/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   -- ------------------------------------- 2.5/44.5 MB 3.8 MB/s eta 0:00:11\n",
      "   -- ------------------------------------- 2.7/44.5 MB 3.8 MB/s eta 0:00:11\n",
      "   -- ------------------------------------- 2.9/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   -- ------------------------------------- 3.1/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   -- ------------------------------------- 3.3/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   --- ------------------------------------ 3.4/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   --- ------------------------------------ 3.6/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   --- ------------------------------------ 3.8/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   --- ------------------------------------ 4.0/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   --- ------------------------------------ 4.2/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   --- ------------------------------------ 4.4/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   ---- ----------------------------------- 4.5/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   ---- ----------------------------------- 4.8/44.5 MB 3.8 MB/s eta 0:00:11\n",
      "   ---- ----------------------------------- 5.0/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   ---- ----------------------------------- 5.1/44.5 MB 3.8 MB/s eta 0:00:11\n",
      "   ---- ----------------------------------- 5.3/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   ---- ----------------------------------- 5.5/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   ----- ---------------------------------- 5.7/44.5 MB 3.9 MB/s eta 0:00:11\n",
      "   ----- ---------------------------------- 5.9/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ----- ---------------------------------- 6.1/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ----- ---------------------------------- 6.2/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ----- ---------------------------------- 6.4/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ----- ---------------------------------- 6.6/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------ --------------------------------- 6.8/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------ --------------------------------- 7.0/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------ --------------------------------- 7.0/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------ --------------------------------- 7.0/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------ --------------------------------- 7.5/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------ --------------------------------- 7.7/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------- -------------------------------- 8.0/44.5 MB 3.8 MB/s eta 0:00:10\n",
      "   ------- -------------------------------- 8.3/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------- -------------------------------- 8.4/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------- -------------------------------- 8.6/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   ------- -------------------------------- 8.8/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   -------- ------------------------------- 9.0/44.5 MB 3.9 MB/s eta 0:00:10\n",
      "   -------- ------------------------------- 9.2/44.5 MB 3.8 MB/s eta 0:00:10\n",
      "   -------- ------------------------------- 9.8/44.5 MB 3.8 MB/s eta 0:00:10\n",
      "   -------- ------------------------------- 10.0/44.5 MB 3.8 MB/s eta 0:00:10\n",
      "   --------- ------------------------------ 10.1/44.5 MB 3.8 MB/s eta 0:00:09\n",
      "   --------- ------------------------------ 10.3/44.5 MB 3.8 MB/s eta 0:00:10\n",
      "   --------- ------------------------------ 10.5/44.5 MB 3.8 MB/s eta 0:00:10\n",
      "   --------- ------------------------------ 10.7/44.5 MB 3.7 MB/s eta 0:00:10\n",
      "   --------- ------------------------------ 10.8/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   --------- ------------------------------ 11.0/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ---------- ----------------------------- 11.2/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ---------- ----------------------------- 11.4/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ---------- ----------------------------- 11.5/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ---------- ----------------------------- 11.7/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ---------- ----------------------------- 11.9/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ---------- ----------------------------- 12.1/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ----------- ---------------------------- 12.2/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ----------- ---------------------------- 12.4/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ----------- ---------------------------- 12.7/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ----------- ---------------------------- 12.9/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ----------- ---------------------------- 13.0/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ----------- ---------------------------- 13.2/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 13.4/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 13.6/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 13.7/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 13.9/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 14.1/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 14.2/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 14.4/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 14.4/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------ --------------------------- 14.4/44.5 MB 3.7 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 14.5/44.5 MB 3.5 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 14.7/44.5 MB 3.5 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 14.9/44.5 MB 3.5 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 15.1/44.5 MB 3.5 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 15.1/44.5 MB 3.5 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 15.1/44.5 MB 3.5 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 15.2/44.5 MB 3.4 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 15.2/44.5 MB 3.4 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 15.2/44.5 MB 3.4 MB/s eta 0:00:09\n",
      "   ------------- -------------------------- 15.2/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   -------------- ------------------------- 15.8/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   -------------- ------------------------- 15.9/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   -------------- ------------------------- 16.1/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   -------------- ------------------------- 16.3/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   -------------- ------------------------- 16.4/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   -------------- ------------------------- 16.6/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 16.7/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 16.9/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 17.1/44.5 MB 3.2 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 17.2/44.5 MB 3.2 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 17.3/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 17.4/44.5 MB 3.3 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 17.5/44.5 MB 3.2 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 17.6/44.5 MB 3.2 MB/s eta 0:00:09\n",
      "   --------------- ------------------------ 17.7/44.5 MB 3.1 MB/s eta 0:00:09\n",
      "   ---------------- ----------------------- 17.9/44.5 MB 3.1 MB/s eta 0:00:09\n",
      "   ---------------- ----------------------- 18.1/44.5 MB 3.1 MB/s eta 0:00:09\n",
      "   ---------------- ----------------------- 18.3/44.5 MB 3.0 MB/s eta 0:00:09\n",
      "   ---------------- ----------------------- 18.5/44.5 MB 3.0 MB/s eta 0:00:09\n",
      "   ---------------- ----------------------- 18.7/44.5 MB 3.0 MB/s eta 0:00:09\n",
      "   ---------------- ----------------------- 18.8/44.5 MB 3.0 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 18.9/44.5 MB 3.0 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 19.0/44.5 MB 2.9 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 19.1/44.5 MB 2.9 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 19.3/44.5 MB 2.9 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 19.4/44.5 MB 2.9 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 19.5/44.5 MB 2.9 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 19.7/44.5 MB 2.9 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 19.8/44.5 MB 2.9 MB/s eta 0:00:09\n",
      "   ----------------- ---------------------- 20.0/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.1/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.1/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.2/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.3/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.5/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.6/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.7/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.8/44.5 MB 2.8 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.8/44.5 MB 2.7 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 20.9/44.5 MB 2.7 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 21.0/44.5 MB 2.7 MB/s eta 0:00:09\n",
      "   ------------------ --------------------- 21.1/44.5 MB 2.7 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.2/44.5 MB 2.7 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.2/44.5 MB 2.6 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.3/44.5 MB 2.6 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.4/44.5 MB 2.6 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.4/44.5 MB 2.6 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.5/44.5 MB 2.6 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.6/44.5 MB 2.6 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.7/44.5 MB 2.6 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.8/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 21.9/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 22.0/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 22.1/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   ------------------- -------------------- 22.2/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   -------------------- ------------------- 22.4/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   -------------------- ------------------- 22.4/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   -------------------- ------------------- 22.4/44.5 MB 2.5 MB/s eta 0:00:09\n",
      "   -------------------- ------------------- 22.8/44.5 MB 2.4 MB/s eta 0:00:10\n",
      "   -------------------- ------------------- 23.0/44.5 MB 2.4 MB/s eta 0:00:10\n",
      "   -------------------- ------------------- 23.1/44.5 MB 2.4 MB/s eta 0:00:10\n",
      "   -------------------- ------------------- 23.2/44.5 MB 2.4 MB/s eta 0:00:10\n",
      "   -------------------- ------------------- 23.3/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   -------------------- ------------------- 23.3/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 23.4/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 23.6/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 23.7/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 23.8/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 23.9/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 24.0/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 24.0/44.5 MB 2.3 MB/s eta 0:00:10\n",
      "   --------------------- ------------------ 24.1/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   --------------------- ------------------ 24.2/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   --------------------- ------------------ 24.3/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   --------------------- ------------------ 24.4/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 24.5/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 24.6/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 24.7/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 24.8/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 24.9/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 25.0/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 25.1/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 25.2/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 25.3/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 25.4/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ---------------------- ----------------- 25.5/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 25.6/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 25.7/44.5 MB 2.3 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 25.8/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 25.9/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 26.0/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 26.1/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 26.2/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 26.3/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 26.4/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ----------------------- ---------------- 26.5/44.5 MB 2.2 MB/s eta 0:00:09\n",
      "   ------------------------ --------------- 26.8/44.5 MB 2.1 MB/s eta 0:00:09\n",
      "   ------------------------ --------------- 27.1/44.5 MB 2.1 MB/s eta 0:00:09\n",
      "   ------------------------ --------------- 27.2/44.5 MB 2.1 MB/s eta 0:00:09\n",
      "   ------------------------ --------------- 27.3/44.5 MB 2.1 MB/s eta 0:00:09\n",
      "   ------------------------ --------------- 27.4/44.5 MB 2.1 MB/s eta 0:00:09\n",
      "   ------------------------ --------------- 27.5/44.5 MB 2.1 MB/s eta 0:00:09\n",
      "   ------------------------ --------------- 27.7/44.5 MB 2.1 MB/s eta 0:00:09\n",
      "   ------------------------- -------------- 27.9/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   ------------------------- -------------- 28.0/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   ------------------------- -------------- 28.2/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   ------------------------- -------------- 28.4/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   ------------------------- -------------- 28.5/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   ------------------------- -------------- 28.6/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   ------------------------- -------------- 28.8/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   -------------------------- ------------- 29.0/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   -------------------------- ------------- 29.1/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   -------------------------- ------------- 29.2/44.5 MB 2.2 MB/s eta 0:00:08\n",
      "   -------------------------- ------------- 29.4/44.5 MB 2.1 MB/s eta 0:00:08\n",
      "   -------------------------- ------------- 29.5/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   -------------------------- ------------- 29.6/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   -------------------------- ------------- 29.8/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   -------------------------- ------------- 29.9/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   -------------------------- ------------- 30.0/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 30.1/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 30.4/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 30.5/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 30.6/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 30.7/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 30.8/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 31.0/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   --------------------------- ------------ 31.1/44.5 MB 2.2 MB/s eta 0:00:07\n",
      "   ---------------------------- ----------- 31.2/44.5 MB 2.2 MB/s eta 0:00:06\n",
      "   ---------------------------- ----------- 31.4/44.5 MB 2.2 MB/s eta 0:00:06\n",
      "   ---------------------------- ----------- 31.5/44.5 MB 2.2 MB/s eta 0:00:06\n",
      "   ---------------------------- ----------- 31.7/44.5 MB 2.3 MB/s eta 0:00:06\n",
      "   ---------------------------- ----------- 32.0/44.5 MB 2.3 MB/s eta 0:00:06\n",
      "   ---------------------------- ----------- 32.1/44.5 MB 2.3 MB/s eta 0:00:06\n",
      "   ----------------------------- ---------- 32.3/44.5 MB 2.3 MB/s eta 0:00:06\n",
      "   ----------------------------- ---------- 32.3/44.5 MB 2.3 MB/s eta 0:00:06\n",
      "   ----------------------------- ---------- 32.4/44.5 MB 2.3 MB/s eta 0:00:06\n",
      "   ----------------------------- ---------- 32.5/44.5 MB 2.3 MB/s eta 0:00:06\n",
      "   ----------------------------- ---------- 32.6/44.5 MB 2.4 MB/s eta 0:00:05\n",
      "   ----------------------------- ---------- 32.7/44.5 MB 2.4 MB/s eta 0:00:05\n",
      "   ----------------------------- ---------- 32.8/44.5 MB 2.4 MB/s eta 0:00:05\n",
      "   ----------------------------- ---------- 32.9/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ----------------------------- ---------- 33.0/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ----------------------------- ---------- 33.1/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ----------------------------- ---------- 33.2/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ----------------------------- ---------- 33.3/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 33.4/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 33.5/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 33.7/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 33.8/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 33.9/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 34.0/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 34.1/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 34.2/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 34.3/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------ --------- 34.4/44.5 MB 2.3 MB/s eta 0:00:05\n",
      "   ------------------------------- -------- 34.8/44.5 MB 2.4 MB/s eta 0:00:05\n",
      "   ------------------------------- -------- 35.0/44.5 MB 2.4 MB/s eta 0:00:05\n",
      "   ------------------------------- -------- 35.0/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   ------------------------------- -------- 35.2/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   ------------------------------- -------- 35.3/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   ------------------------------- -------- 35.4/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   ------------------------------- -------- 35.5/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 35.6/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 35.7/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 35.8/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 35.9/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 36.1/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 36.2/44.5 MB 2.4 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 36.4/44.5 MB 2.5 MB/s eta 0:00:04\n",
      "   -------------------------------- ------- 36.6/44.5 MB 2.5 MB/s eta 0:00:04\n",
      "   --------------------------------- ------ 36.7/44.5 MB 2.5 MB/s eta 0:00:04\n",
      "   --------------------------------- ------ 36.9/44.5 MB 2.5 MB/s eta 0:00:03\n",
      "   --------------------------------- ------ 37.0/44.5 MB 2.5 MB/s eta 0:00:03\n",
      "   --------------------------------- ------ 37.2/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   --------------------------------- ------ 37.5/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   --------------------------------- ------ 37.7/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   --------------------------------- ------ 37.8/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ---------------------------------- ----- 37.9/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ---------------------------------- ----- 38.1/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ---------------------------------- ----- 38.3/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ---------------------------------- ----- 38.4/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ---------------------------------- ----- 38.5/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ---------------------------------- ----- 38.7/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ---------------------------------- ----- 38.8/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ----------------------------------- ---- 38.9/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ----------------------------------- ---- 39.1/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ----------------------------------- ---- 39.2/44.5 MB 2.6 MB/s eta 0:00:03\n",
      "   ----------------------------------- ---- 39.3/44.5 MB 2.6 MB/s eta 0:00:02\n",
      "   ----------------------------------- ---- 39.5/44.5 MB 2.6 MB/s eta 0:00:02\n",
      "   ----------------------------------- ---- 39.7/44.5 MB 2.6 MB/s eta 0:00:02\n",
      "   ----------------------------------- ---- 39.8/44.5 MB 2.6 MB/s eta 0:00:02\n",
      "   ----------------------------------- ---- 40.0/44.5 MB 2.6 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 40.1/44.5 MB 2.6 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 40.4/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 40.6/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 40.7/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 40.9/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------ --- 41.1/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------- -- 41.2/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------- -- 41.4/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------- -- 41.6/44.5 MB 2.7 MB/s eta 0:00:02\n",
      "   ------------------------------------- -- 41.9/44.5 MB 2.7 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 42.0/44.5 MB 2.7 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 42.2/44.5 MB 2.7 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 42.6/44.5 MB 2.8 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 42.7/44.5 MB 2.8 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 42.9/44.5 MB 2.8 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 43.2/44.5 MB 2.9 MB/s eta 0:00:01\n",
      "   ---------------------------------------  43.4/44.5 MB 2.9 MB/s eta 0:00:01\n",
      "   ---------------------------------------  43.7/44.5 MB 3.0 MB/s eta 0:00:01\n",
      "   ---------------------------------------  43.9/44.5 MB 3.0 MB/s eta 0:00:01\n",
      "   ---------------------------------------  44.0/44.5 MB 3.0 MB/s eta 0:00:01\n",
      "   ---------------------------------------  44.2/44.5 MB 3.0 MB/s eta 0:00:01\n",
      "   ---------------------------------------  44.5/44.5 MB 3.1 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 44.5/44.5 MB 2.9 MB/s eta 0:00:00\n",
      "Downloading threadpoolctl-3.5.0-py3-none-any.whl (18 kB)\n",
      "Installing collected packages: threadpoolctl, scipy, joblib, scikit-learn\n",
      "Successfully installed joblib-1.4.2 scikit-learn-1.5.1 scipy-1.14.0 threadpoolctl-3.5.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 24.0 -> 24.1.2\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "pip install scikit-learn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "231db61c-2579-451b-8491-dfea2ad64d70",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import seaborn as sb\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "78693ef4-2a2a-4019-95c1-fa74e642be9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>step</th>\n",
       "      <th>type</th>\n",
       "      <th>amount</th>\n",
       "      <th>nameOrig</th>\n",
       "      <th>oldbalanceOrg</th>\n",
       "      <th>newbalanceOrig</th>\n",
       "      <th>nameDest</th>\n",
       "      <th>oldbalanceDest</th>\n",
       "      <th>newbalanceDest</th>\n",
       "      <th>isFraud</th>\n",
       "      <th>isFlaggedFraud</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>PAYMENT</td>\n",
       "      <td>9839.64</td>\n",
       "      <td>C1231006815</td>\n",
       "      <td>170136.0</td>\n",
       "      <td>160296.36</td>\n",
       "      <td>M1979787155</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>PAYMENT</td>\n",
       "      <td>1864.28</td>\n",
       "      <td>C1666544295</td>\n",
       "      <td>21249.0</td>\n",
       "      <td>19384.72</td>\n",
       "      <td>M2044282225</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>TRANSFER</td>\n",
       "      <td>181.00</td>\n",
       "      <td>C1305486145</td>\n",
       "      <td>181.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>C553264065</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>CASH_OUT</td>\n",
       "      <td>181.00</td>\n",
       "      <td>C840083671</td>\n",
       "      <td>181.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>C38997010</td>\n",
       "      <td>21182.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>PAYMENT</td>\n",
       "      <td>11668.14</td>\n",
       "      <td>C2048537720</td>\n",
       "      <td>41554.0</td>\n",
       "      <td>29885.86</td>\n",
       "      <td>M1230701703</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   step      type    amount     nameOrig  oldbalanceOrg  newbalanceOrig  \\\n",
       "0     1   PAYMENT   9839.64  C1231006815       170136.0       160296.36   \n",
       "1     1   PAYMENT   1864.28  C1666544295        21249.0        19384.72   \n",
       "2     1  TRANSFER    181.00  C1305486145          181.0            0.00   \n",
       "3     1  CASH_OUT    181.00   C840083671          181.0            0.00   \n",
       "4     1   PAYMENT  11668.14  C2048537720        41554.0        29885.86   \n",
       "\n",
       "      nameDest  oldbalanceDest  newbalanceDest  isFraud  isFlaggedFraud  \n",
       "0  M1979787155             0.0             0.0        0               0  \n",
       "1  M2044282225             0.0             0.0        0               0  \n",
       "2   C553264065             0.0             0.0        1               0  \n",
       "3    C38997010         21182.0             0.0        1               0  \n",
       "4  M1230701703             0.0             0.0        0               0  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv(\"D:/archive/onlinefraud.csv\")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2c306ef1-4d81-4199-9fe4-cb378deee0f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "step              0\n",
      "type              0\n",
      "amount            0\n",
      "nameOrig          0\n",
      "oldbalanceOrg     0\n",
      "newbalanceOrig    0\n",
      "nameDest          0\n",
      "oldbalanceDest    0\n",
      "newbalanceDest    0\n",
      "isFraud           0\n",
      "isFlaggedFraud    0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "723c8c2b-7979-4cc2-bf9d-203d510e6186",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['PAYMENT', 'TRANSFER', 'CASH_OUT', 'DEBIT', 'CASH_IN'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"type\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9c7a3d90-525c-4fc4-acac-3131ef61a580",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\aparu\\AppData\\Local\\Temp\\ipykernel_20424\\4181461969.py:1: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  df[\"type\"] = df[\"type\"].replace({\"CASH_OUT\": 1, \"PAYMENT\": 2, \"CASH_IN\": 3, \"TRANSFER\": 4, \"DEBIT\": 5})\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>step</th>\n",
       "      <th>type</th>\n",
       "      <th>amount</th>\n",
       "      <th>oldbalanceOrg</th>\n",
       "      <th>newbalanceOrig</th>\n",
       "      <th>oldbalanceDest</th>\n",
       "      <th>newbalanceDest</th>\n",
       "      <th>isFraud</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9839.64</td>\n",
       "      <td>170136.0</td>\n",
       "      <td>160296.36</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1864.28</td>\n",
       "      <td>21249.0</td>\n",
       "      <td>19384.72</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>181.00</td>\n",
       "      <td>181.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>181.00</td>\n",
       "      <td>181.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>21182.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11668.14</td>\n",
       "      <td>41554.0</td>\n",
       "      <td>29885.86</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   step  type    amount  oldbalanceOrg  newbalanceOrig  oldbalanceDest  \\\n",
       "0     1     2   9839.64       170136.0       160296.36             0.0   \n",
       "1     1     2   1864.28        21249.0        19384.72             0.0   \n",
       "2     1     4    181.00          181.0            0.00             0.0   \n",
       "3     1     1    181.00          181.0            0.00         21182.0   \n",
       "4     1     2  11668.14        41554.0        29885.86             0.0   \n",
       "\n",
       "   newbalanceDest  isFraud  \n",
       "0             0.0        0  \n",
       "1             0.0        0  \n",
       "2             0.0        1  \n",
       "3             0.0        1  \n",
       "4             0.0        0  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"type\"] = df[\"type\"].replace({\"CASH_OUT\": 1, \"PAYMENT\": 2, \"CASH_IN\": 3, \"TRANSFER\": 4, \"DEBIT\": 5})\n",
    "df=df.drop(columns=['nameOrig','nameDest','isFlaggedFraud'])\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3733de79-96c3-4b9e-a8f9-8d9f1b01b989",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 900x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "corr=df.corr()\n",
    "plt.figure(figsize=(9,4))\n",
    "sb.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt='.2f')\n",
    "plt.title('Correlation Matrix')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "724dfae9-c397-471d-afe6-5291fb013d04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>step</th>\n",
       "      <th>type</th>\n",
       "      <th>amount</th>\n",
       "      <th>newbalanceOrig</th>\n",
       "      <th>newbalanceDest</th>\n",
       "      <th>isFraud</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9839.64</td>\n",
       "      <td>160296.36</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1864.28</td>\n",
       "      <td>19384.72</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>181.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>181.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11668.14</td>\n",
       "      <td>29885.86</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   step  type    amount  newbalanceOrig  newbalanceDest  isFraud\n",
       "0     1     2   9839.64       160296.36             0.0        0\n",
       "1     1     2   1864.28        19384.72             0.0        0\n",
       "2     1     4    181.00            0.00             0.0        1\n",
       "3     1     1    181.00            0.00             0.0        1\n",
       "4     1     2  11668.14        29885.86             0.0        0"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=df.drop(columns=['oldbalanceOrg','oldbalanceDest'])\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "48f11ce3-e6ca-4776-9478-ac826bc0a241",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6362620 5090096 1272524\n"
     ]
    }
   ],
   "source": [
    "# spliting data into train_test_split\n",
    "x=df.loc[:, df.columns!='isFraud']\n",
    "y=df['isFraud']\n",
    "x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.2, stratify=df['isFraud'], random_state=1)\n",
    "print(len(df),len(x_train),len(y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d07f20dc-b9c3-4ce0-88ce-f3f43c73f8be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, random_state=0)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier(criterion='entropy', random_state=0)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# training model 1\n",
    "tree=DecisionTreeClassifier(random_state=0, criterion=\"entropy\")\n",
    "tree.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "325a5538-46ed-494c-8830-890f29d89bab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00   1270881\n",
      "           1       0.72      0.71      0.71      1643\n",
      "\n",
      "    accuracy                           1.00   1272524\n",
      "   macro avg       0.86      0.86      0.86   1272524\n",
      "weighted avg       1.00      1.00      1.00   1272524\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# testing model 1\n",
    "y_pred=tree.predict(x_test)\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d486a263-f6cf-40ae-b669-c1f77c2c19c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 16 candidates, totalling 80 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\aparu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py:540: FitFailedWarning: \n",
      "40 fits failed out of a total of 80.\n",
      "The score on these train-test partitions for these parameters will be set to nan.\n",
      "If these failures are not expected, you can try to debug them by setting error_score='raise'.\n",
      "\n",
      "Below are more details about the failures:\n",
      "--------------------------------------------------------------------------------\n",
      "40 fits failed with the following error:\n",
      "Traceback (most recent call last):\n",
      "  File \"C:\\Users\\aparu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py\", line 888, in _fit_and_score\n",
      "    estimator.fit(X_train, y_train, **fit_params)\n",
      "  File \"C:\\Users\\aparu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sklearn\\base.py\", line 1466, in wrapper\n",
      "    estimator._validate_params()\n",
      "  File \"C:\\Users\\aparu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sklearn\\base.py\", line 666, in _validate_params\n",
      "    validate_parameter_constraints(\n",
      "  File \"C:\\Users\\aparu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sklearn\\utils\\_param_validation.py\", line 95, in validate_parameter_constraints\n",
      "    raise InvalidParameterError(\n",
      "sklearn.utils._param_validation.InvalidParameterError: The 'max_features' parameter of DecisionTreeClassifier must be an int in the range [1, inf), a float in the range (0.0, 1.0], a str among {'log2', 'sqrt'} or None. Got 'auto' instead.\n",
      "\n",
      "  warnings.warn(some_fits_failed_message, FitFailedWarning)\n",
      "C:\\Users\\aparu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sklearn\\model_selection\\_search.py:1102: UserWarning: One or more of the test scores are non-finite: [       nan 0.99870926        nan 0.99870926        nan 0.99870926\n",
      "        nan 0.99870926        nan 0.99870926        nan 0.99870926\n",
      "        nan 0.99886485        nan 0.99870926]\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'ccp_alpha': 0.001, 'criterion': 'entropy', 'max_depth': 5, 'max_features': 'sqrt'}\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00   1270881\n",
      "           1       0.71      0.24      0.35      1643\n",
      "\n",
      "    accuracy                           1.00   1272524\n",
      "   macro avg       0.85      0.62      0.68   1272524\n",
      "weighted avg       1.00      1.00      1.00   1272524\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# this cell will take multiple minutes to run all params combinations\n",
    "\n",
    "import warnings # ignoring Future Python versions Warnings\n",
    "warnings.filterwarnings(\"ignore\", category=FutureWarning)\n",
    "\n",
    "param_grid = {'max_features': ['auto', 'sqrt'],\n",
    "              'ccp_alpha': [.01, .001],\n",
    "              'max_depth' : [5, 6],\n",
    "              'criterion' :['gini', 'entropy']\n",
    "             }\n",
    "grid = GridSearchCV(estimator=tree, param_grid=param_grid, cv=5, verbose=True)\n",
    "grid.fit(x_train, y_train)\n",
    "print(grid.best_params_)\n",
    "grid_predictions = grid.predict(x_test)\n",
    "print(classification_report(y_test, grid_predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e3ac8c8d-832d-4f0a-bce4-bd2bf9afd0c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(n_estimators=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(n_estimators=10)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(n_estimators=10)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "forest=RandomForestClassifier(n_estimators = 10)\n",
    "forest.fit(x_train,y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "0eeb2a49-d606-49d2-8527-15a384eed4ba",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00   1270881\n",
      "           1       0.94      0.68      0.79      1643\n",
      "\n",
      "    accuracy                           1.00   1272524\n",
      "   macro avg       0.97      0.84      0.89   1272524\n",
      "weighted avg       1.00      1.00      1.00   1272524\n",
      "\n"
     ]
    }
   ],
   "source": [
    "y_pred2=forest.predict(x_test)\n",
    "print(classification_report(y_test, y_pred2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bb2d2928-981d-4186-a4e2-fd3c28a544b8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
